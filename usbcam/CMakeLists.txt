# Set standards
cmake_minimum_required(VERSION 2.8)
project(usbcam C CXX)
set(CMAKE_CXX_STANDARD 17)

# /////////////////////////////////////////////////////////////////////////////
# ////////////////////////////// PROJECT FILES ////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

file(GLOB_RECURSE MY_SOURCES src/*)

# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////// DEPENDENCIES ////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

find_package(PythonInterp REQUIRED)
find_package(PythonLibs REQUIRED)

# /////////////////////////////////////////////////////////////////////////////
# ///////////////////////////////// INCLUDES //////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

include_directories(
    src
    lib
    ${PYTHON_INCLUDE_DIRS}
)

# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////// BUILD ///////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

set(EXECUTABLE_OUTPUT_PATH bin/${CMAKE_BUILD_TYPE})
add_library(${PROJECT_NAME} SHARED ${MY_SOURCES})

# /////////////////////////////////////////////////////////////////////////////
# ////////////////////////////////// LINKER ///////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

target_link_libraries(
    ${PROJECT_NAME}
    ${PYTHON_LIBRARIES}
)

if (WIN32)
target_link_libraries(
    ${PROJECT_NAME}
    runtimeobject.lib
    kernel32.lib
    user32.lib
    gdi32.lib
    winspool.lib
    comdlg32.lib
    advapi32.lib
    shell32.lib
    ole32.lib
    oleaut32.lib
    uuid.lib
    odbc32.lib
    odbccp32.lib
)
endif()

# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////// TESTS ///////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

file(GLOB_RECURSE MY_TESTS test/*)
add_executable(${PROJECT_NAME}-tests ${MY_SOURCES} ${MY_TESTS})
